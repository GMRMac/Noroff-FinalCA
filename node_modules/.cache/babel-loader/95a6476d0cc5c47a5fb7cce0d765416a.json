{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Noroff\\\\2018-2020_Secound year\\\\07_JavaScript Frameworks 2\\\\Module 3\\\\bootstrap\\\\src\\\\components\\\\characters\\\\detail\\\\CharacterDetailContainer.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { BASE_URL } from \"../../../constants/API\";\nimport \"../list/CharacterList.css\";\nexport default class CharacterDetailContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      details: null,\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    //get the id fro mthe URL\n    const id = this.props.match.params.id; //create the URL string\n\n    const url = \"\".concat(BASE_URL, \"/\").concat(id);\n    fetch(url).then(response => response.json()).then(json => {\n      this.setState({\n        details: json,\n        loading: false\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          loading: false\n        });\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          details = _this$state.details;\n\n    if (loading || !details) {\n      return React.createElement(Spinner, {\n        animation: \"border\",\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, details.name);\n  }\n\n}\nCharacterDetailContainer.propTypes = {\n  match: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["D:/OneDrive/Noroff/2018-2020_Secound year/07_JavaScript Frameworks 2/Module 3/bootstrap/src/components/characters/detail/CharacterDetailContainer.js"],"names":["React","Component","PropTypes","Spinner","BASE_URL","CharacterDetailContainer","state","details","loading","componentDidMount","id","props","match","params","url","fetch","then","response","json","setState","catch","error","console","log","render","name","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAO,2BAAP;AAEA,eAAe,MAAMC,wBAAN,SAAuCJ,SAAvC,CAAiD;AAAA;AAAA;AAAA,SAK5DK,KAL4D,GAKpD;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,OAAO,EAAE;AAFL,KALoD;AAAA;;AAU5D,QAAMC,iBAAN,GAAyB;AACrB;AADqB,UAEbC,EAFa,GAEN,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAFX,CAEbH,EAFa,EAGrB;;AACA,UAAMI,GAAG,aAAMV,QAAN,cAAkBM,EAAlB,CAAT;AAEAK,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVZ,QAAAA,OAAO,EAAEW,IADC;AAEVV,QAAAA,OAAO,EAAE;AAFC,OAAd,EAIHY,KAJG,CAIGC,KAAK,IAAI;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,aAAKF,QAAL,CAAc;AACVX,UAAAA,OAAO,EAAE;AADC,SAAd;AAGH,OAVD;AAWP,KAdD;AAeH;;AAEDgB,EAAAA,MAAM,GAAE;AAAA,wBACuB,KAAKlB,KAD5B;AAAA,UACGE,OADH,eACGA,OADH;AAAA,UACYD,OADZ,eACYA,OADZ;;AAGJ,QAAIC,OAAO,IAAI,CAACD,OAAhB,EAAwB;AACpB,aAAO,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,SAAS,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,OAAO,CAACkB,IAAd,CAAP;AACH;;AAzC2D;AAA3CpB,wB,CACVqB,S,GAAY;AACfd,EAAAA,KAAK,EAAEV,SAAS,CAACyB,MAAV,CAAiBC;AADT,C","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { BASE_URL } from \"../../../constants/API\";\r\nimport \"../list/CharacterList.css\";\r\n\r\nexport default class CharacterDetailContainer extends Component {\r\n    static propTypes = {\r\n        match: PropTypes.object.isRequired,\r\n    }\r\n    \r\n    state = {\r\n        details: null,\r\n        loading: true,\r\n    };\r\n    \r\n    async componentDidMount(){\r\n        //get the id fro mthe URL\r\n        const { id } = this.props.match.params\r\n        //create the URL string\r\n        const url = `${BASE_URL}/${id}`\r\n        \r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    details: json,\r\n                    loading: false\r\n                })\r\n            .catch(error => {\r\n                    console.log(error)\r\n                    \r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {loading, details} = this.state;\r\n        \r\n        if (loading || !details){\r\n            return <Spinner animation=\"border\" className=\"spinner\"/>;\r\n        }\r\n        \r\n        return <div>{details.name}</div>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}